//
//  Colors.swift
//  iTunesSearchAPI
//
//  Created by Sandy Ludosky on 23/04/2019.
//  Copyright Â© 2019 Sandy Ludosky. All rights reserved.
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

import UIKit

public class Color: NSObject {
    static let info: UIColor = UIColor(red: 0.020, green: 0.518, blue: 0.742, alpha: 1.000)
    static let error: UIColor = UIColor(red: 0.976, green: 0.385, blue: 0.432, alpha: 1.000)
    static let warning: UIColor = UIColor(red: 0.976, green: 0.667, blue: 0.383, alpha: 1.000)
    static let backgroundColor: UIColor = UIColor(red: 0.949, green: 0.949, blue: 0.949, alpha: 1.000)
    static let primaryColor: UIColor = UIColor(red: 0.154, green: 0.427, blue: 0.685, alpha: 1.000)
    static let secondaryColor: UIColor = UIColor(red: 0.351, green: 0.819, blue: 0.631, alpha: 1.000)
    static let tertiaryColor: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
    static let concreteColor: UIColor = UIColor(red: 0.584, green: 0.647, blue: 0.650, alpha: 1.000)
    static let silverColor: UIColor = UIColor(red: 0.741, green: 0.764, blue: 0.780, alpha: 1.000)
    static let darkGray: UIColor = UIColor(red: 38 / 255.0, green: 38 / 255.0, blue: 38 / 255.0, alpha: 1)
}

private extension UIColor {
    func withHue(_ newHue: CGFloat) -> UIColor {
        var saturation: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(nil, saturation: &saturation, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: newHue, saturation: saturation, brightness: brightness, alpha: alpha)
    }
    func withSaturation(_ newSaturation: CGFloat) -> UIColor {
        var hue: CGFloat = 1, brightness: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: nil, brightness: &brightness, alpha: &alpha)
        return UIColor(hue: hue, saturation: newSaturation, brightness: brightness, alpha: alpha)
    }
    func withBrightness(_ newBrightness: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, alpha: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: nil, alpha: &alpha)
        return UIColor(hue: hue, saturation: saturation, brightness: newBrightness, alpha: alpha)
    }
    func withAlpha(_ newAlpha: CGFloat) -> UIColor {
        var hue: CGFloat = 1, saturation: CGFloat = 1, brightness: CGFloat = 1
        self.getHue(&hue, saturation: &saturation, brightness: &brightness, alpha: nil)
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: newAlpha)
    }
    func highlight(withLevel highlight: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-highlight) + highlight, green: green * (1-highlight) + highlight, blue: blue * (1-highlight) + highlight, alpha: alpha * (1-highlight) + highlight)
    }
    func shadow(withLevel shadow: CGFloat) -> UIColor {
        var red: CGFloat = 1, green: CGFloat = 1, blue: CGFloat = 1, alpha: CGFloat = 1
        self.getRed(&red, green: &green, blue: &blue, alpha: &alpha)
        return UIColor(red: red * (1-shadow), green: green * (1-shadow), blue: blue * (1-shadow), alpha: alpha * (1-shadow) + shadow)
    }
}
